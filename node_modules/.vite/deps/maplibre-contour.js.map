{
  "version": 3,
  "sources": ["../../maplibre-contour/dist/index.mjs"],
  "sourcesContent": ["/* eslint-disable */\r\n\r\nvar shared, worker, mlcontour;\r\n// define gets called three times: one for each chunk. we rely on the order\r\n// they're imported to know which is which\r\nfunction define(_, chunk) {\r\n  if (!shared) {\r\n    shared = chunk;\r\n  } else if (!worker) {\r\n    worker = chunk;\r\n  } else {\r\n    var workerBundleString =\r\n      \"var sharedChunk = {}; (\" +\r\n      shared +\r\n      \")(sharedChunk); (\" +\r\n      worker +\r\n      \")(sharedChunk);\";\r\n\r\n    var sharedChunk = {};\r\n    shared(sharedChunk);\r\n    mlcontour = chunk(sharedChunk);\r\n    if (typeof window !== \"undefined\") {\r\n      mlcontour.workerUrl = window.URL.createObjectURL(\r\n        new Blob([workerBundleString], { type: \"text/javascript\" })\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n\r\ndefine(['exports'], (function (exports) { 'use strict';\r\n\r\n/*\r\nAdapted from d3-contour https://github.com/d3/d3-contour\r\n\r\nCopyright 2012-2023 Mike Bostock\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any purpose\r\nwith or without fee is hereby granted, provided that the above copyright notice\r\nand this permission notice appear in all copies.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\r\nOF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\r\nTORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\r\nTHIS SOFTWARE.\r\n*/\r\nclass Fragment {\r\n    constructor(start, end) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.points = [];\r\n        this.append = this.append.bind(this);\r\n        this.prepend = this.prepend.bind(this);\r\n    }\r\n    append(x, y) {\r\n        this.points.push(Math.round(x), Math.round(y));\r\n    }\r\n    prepend(x, y) {\r\n        this.points.splice(0, 0, Math.round(x), Math.round(y));\r\n    }\r\n    lineString() {\r\n        return this.toArray();\r\n    }\r\n    isEmpty() {\r\n        return this.points.length < 2;\r\n    }\r\n    appendFragment(other) {\r\n        this.points.push(...other.points);\r\n        this.end = other.end;\r\n    }\r\n    toArray() {\r\n        return this.points;\r\n    }\r\n}\r\nconst CASES = [\r\n    [],\r\n    [\r\n        [\r\n            [1, 2],\r\n            [0, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [2, 1],\r\n            [1, 2],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [2, 1],\r\n            [0, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [1, 0],\r\n            [2, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [1, 2],\r\n            [0, 1],\r\n        ],\r\n        [\r\n            [1, 0],\r\n            [2, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [1, 0],\r\n            [1, 2],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [1, 0],\r\n            [0, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [0, 1],\r\n            [1, 0],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [1, 2],\r\n            [1, 0],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [0, 1],\r\n            [1, 0],\r\n        ],\r\n        [\r\n            [2, 1],\r\n            [1, 2],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [2, 1],\r\n            [1, 0],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [0, 1],\r\n            [2, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [1, 2],\r\n            [2, 1],\r\n        ],\r\n    ],\r\n    [\r\n        [\r\n            [0, 1],\r\n            [1, 2],\r\n        ],\r\n    ],\r\n    [],\r\n];\r\nfunction index(width, x, y, point) {\r\n    x = x * 2 + point[0];\r\n    y = y * 2 + point[1];\r\n    return x + y * (width + 1) * 2;\r\n}\r\nfunction ratio(a, b, c) {\r\n    return (b - a) / (c - a);\r\n}\r\n/**\r\n * Generates contour lines from a HeightTile\r\n *\r\n * @param interval Vertical distance between contours\r\n * @param tile The input height tile, where values represent the height at the top-left of each pixel\r\n * @param extent Vector tile extent (default 4096)\r\n * @param buffer How many pixels into each neighboring tile to include in a tile\r\n * @returns an object where keys are the elevation, and values are a list of `[x1, y1, x2, y2, ...]`\r\n * contour lines in tile coordinates\r\n */\r\nfunction generateIsolines(interval, tile, extent = 4096, buffer = 1) {\r\n    if (!interval) {\r\n        return {};\r\n    }\r\n    const multiplier = extent / (tile.width - 1);\r\n    let tld, trd, bld, brd;\r\n    let r, c;\r\n    const segments = {};\r\n    const fragmentByStartByLevel = new Map();\r\n    const fragmentByEndByLevel = new Map();\r\n    function interpolate(point, threshold, accept) {\r\n        if (point[0] === 0) {\r\n            // left\r\n            accept(multiplier * (c - 1), multiplier * (r - ratio(bld, threshold, tld)));\r\n        }\r\n        else if (point[0] === 2) {\r\n            // right\r\n            accept(multiplier * c, multiplier * (r - ratio(brd, threshold, trd)));\r\n        }\r\n        else if (point[1] === 0) {\r\n            // top\r\n            accept(multiplier * (c - ratio(trd, threshold, tld)), multiplier * (r - 1));\r\n        }\r\n        else {\r\n            // bottom\r\n            accept(multiplier * (c - ratio(brd, threshold, bld)), multiplier * r);\r\n        }\r\n    }\r\n    // Most marching-squares implementations (d3-contour, gdal-contour) make one pass through the matrix per threshold.\r\n    // This implementation makes a single pass through the matrix, building up all of the contour lines at the\r\n    // same time to improve performance.\r\n    for (r = 1 - buffer; r < tile.height + buffer; r++) {\r\n        trd = tile.get(0, r - 1);\r\n        brd = tile.get(0, r);\r\n        let minR = Math.min(trd, brd);\r\n        let maxR = Math.max(trd, brd);\r\n        for (c = 1 - buffer; c < tile.width + buffer; c++) {\r\n            tld = trd;\r\n            bld = brd;\r\n            trd = tile.get(c, r - 1);\r\n            brd = tile.get(c, r);\r\n            const minL = minR;\r\n            const maxL = maxR;\r\n            minR = Math.min(trd, brd);\r\n            maxR = Math.max(trd, brd);\r\n            if (isNaN(tld) || isNaN(trd) || isNaN(brd) || isNaN(bld)) {\r\n                continue;\r\n            }\r\n            const min = Math.min(minL, minR);\r\n            const max = Math.max(maxL, maxR);\r\n            const start = Math.ceil(min / interval) * interval;\r\n            const end = Math.floor(max / interval) * interval;\r\n            for (let threshold = start; threshold <= end; threshold += interval) {\r\n                const tl = tld > threshold;\r\n                const tr = trd > threshold;\r\n                const bl = bld > threshold;\r\n                const br = brd > threshold;\r\n                for (const segment of CASES[(tl ? 8 : 0) | (tr ? 4 : 0) | (br ? 2 : 0) | (bl ? 1 : 0)]) {\r\n                    let fragmentByStart = fragmentByStartByLevel.get(threshold);\r\n                    if (!fragmentByStart)\r\n                        fragmentByStartByLevel.set(threshold, (fragmentByStart = new Map()));\r\n                    let fragmentByEnd = fragmentByEndByLevel.get(threshold);\r\n                    if (!fragmentByEnd)\r\n                        fragmentByEndByLevel.set(threshold, (fragmentByEnd = new Map()));\r\n                    const start = segment[0];\r\n                    const end = segment[1];\r\n                    const startIndex = index(tile.width, c, r, start);\r\n                    const endIndex = index(tile.width, c, r, end);\r\n                    let f, g;\r\n                    if ((f = fragmentByEnd.get(startIndex))) {\r\n                        fragmentByEnd.delete(startIndex);\r\n                        if ((g = fragmentByStart.get(endIndex))) {\r\n                            fragmentByStart.delete(endIndex);\r\n                            if (f === g) {\r\n                                // closing a ring\r\n                                interpolate(end, threshold, f.append);\r\n                                if (!f.isEmpty()) {\r\n                                    let list = segments[threshold];\r\n                                    if (!list) {\r\n                                        segments[threshold] = list = [];\r\n                                    }\r\n                                    list.push(f.lineString());\r\n                                }\r\n                            }\r\n                            else {\r\n                                // connecting 2 segments\r\n                                f.appendFragment(g);\r\n                                fragmentByEnd.set((f.end = g.end), f);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // adding to the end of f\r\n                            interpolate(end, threshold, f.append);\r\n                            fragmentByEnd.set((f.end = endIndex), f);\r\n                        }\r\n                    }\r\n                    else if ((f = fragmentByStart.get(endIndex))) {\r\n                        fragmentByStart.delete(endIndex);\r\n                        // extending the start of f\r\n                        interpolate(start, threshold, f.prepend);\r\n                        fragmentByStart.set((f.start = startIndex), f);\r\n                    }\r\n                    else {\r\n                        // starting a new fragment\r\n                        const newFrag = new Fragment(startIndex, endIndex);\r\n                        interpolate(start, threshold, newFrag.append);\r\n                        interpolate(end, threshold, newFrag.append);\r\n                        fragmentByStart.set(startIndex, newFrag);\r\n                        fragmentByEnd.set(endIndex, newFrag);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (const [level, fragmentByStart] of fragmentByStartByLevel.entries()) {\r\n        let list = null;\r\n        for (const value of fragmentByStart.values()) {\r\n            if (!value.isEmpty()) {\r\n                if (list == null) {\r\n                    list = segments[level] || (segments[level] = []);\r\n                }\r\n                list.push(value.lineString());\r\n            }\r\n        }\r\n    }\r\n    return segments;\r\n}\r\n\r\nlet num = 0;\r\n/**\r\n * LRU Cache for CancelablePromises.\r\n * The underlying request is only canceled when all callers have canceled their usage of it.\r\n */\r\nclass AsyncCache {\r\n    constructor(maxSize = 100) {\r\n        this.size = () => this.items.size;\r\n        this.get = (key, supplier) => this.getCancelable(key, (key) => ({\r\n            value: supplier(key),\r\n            cancel: () => { },\r\n        })).value;\r\n        this.getCancelable = (key, supplier) => {\r\n            let result = this.items.get(key);\r\n            if (!result) {\r\n                const value = supplier(key);\r\n                result = {\r\n                    cancel: value.cancel,\r\n                    item: value.value,\r\n                    lastUsed: ++num,\r\n                    waiting: 1,\r\n                };\r\n                this.items.set(key, result);\r\n                this.prune();\r\n            }\r\n            else {\r\n                result.lastUsed = ++num;\r\n                result.waiting++;\r\n            }\r\n            const items = this.items;\r\n            const value = result.item.then((r) => r, (e) => {\r\n                items.delete(key);\r\n                return Promise.reject(e);\r\n            });\r\n            let canceled = false;\r\n            return {\r\n                value,\r\n                cancel: () => {\r\n                    if (result && result.cancel && !canceled) {\r\n                        canceled = true;\r\n                        if (--result.waiting <= 0) {\r\n                            result.cancel();\r\n                            items.delete(key);\r\n                        }\r\n                    }\r\n                },\r\n            };\r\n        };\r\n        this.clear = () => this.items.clear();\r\n        this.maxSize = maxSize;\r\n        this.items = new Map();\r\n    }\r\n    prune() {\r\n        if (this.items.size > this.maxSize) {\r\n            let minKey;\r\n            let minUse = Infinity;\r\n            this.items.forEach((value, key) => {\r\n                if (value.lastUsed < minUse) {\r\n                    minUse = value.lastUsed;\r\n                    minKey = key;\r\n                }\r\n            });\r\n            if (typeof minKey !== \"undefined\") {\r\n                this.items.delete(minKey);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction sortedEntries(object) {\r\n    const entries = Object.entries(object);\r\n    entries.sort(([a], [b]) => (a < b ? -1 : a > b ? 1 : 0));\r\n    return entries;\r\n}\r\nfunction encodeThresholds(thresholds) {\r\n    return sortedEntries(thresholds)\r\n        .map(([key, value]) => [key, ...(typeof value === \"number\" ? [value] : value)].join(\"*\"))\r\n        .join(\"~\");\r\n}\r\nfunction decodeThresholds(thresholds) {\r\n    return Object.fromEntries(thresholds\r\n        .split(\"~\")\r\n        .map((part) => part.split(\"*\").map(Number))\r\n        .map(([key, ...values]) => [key, values]));\r\n}\r\nfunction encodeOptions({ thresholds, ...rest }) {\r\n    return sortedEntries({ thresholds: encodeThresholds(thresholds), ...rest })\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n        .join(\"&\");\r\n}\r\nfunction decodeOptions(options) {\r\n    return Object.fromEntries(options\r\n        .replace(/^.*\\?/, \"\")\r\n        .split(\"&\")\r\n        .map((part) => {\r\n        const parts = part.split(\"=\").map(decodeURIComponent);\r\n        const k = parts[0];\r\n        let v = parts[1];\r\n        switch (k) {\r\n            case \"thresholds\":\r\n                v = decodeThresholds(v);\r\n                break;\r\n            case \"extent\":\r\n            case \"multiplier\":\r\n            case \"overzoom\":\r\n            case \"buffer\":\r\n                v = Number(v);\r\n        }\r\n        return [k, v];\r\n    }));\r\n}\r\nfunction encodeIndividualOptions(options) {\r\n    return sortedEntries(options)\r\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\r\n        .join(\",\");\r\n}\r\nfunction getOptionsForZoom(options, zoom) {\r\n    const { thresholds, ...rest } = options;\r\n    let levels = [];\r\n    let maxLessThanOrEqualTo = -Infinity;\r\n    Object.entries(thresholds).forEach(([zString, value]) => {\r\n        const z = Number(zString);\r\n        if (z <= zoom && z > maxLessThanOrEqualTo) {\r\n            maxLessThanOrEqualTo = z;\r\n            levels = typeof value === \"number\" ? [value] : value;\r\n        }\r\n    });\r\n    return {\r\n        levels,\r\n        ...rest,\r\n    };\r\n}\r\nfunction map({ cancel, value }, mapper) {\r\n    return { cancel, value: value.then(mapper) };\r\n}\r\nfunction copy(src) {\r\n    const dst = new ArrayBuffer(src.byteLength);\r\n    new Uint8Array(dst).set(new Uint8Array(src));\r\n    return dst;\r\n}\r\nfunction prepareDemTile(promise, copy) {\r\n    return map(promise, ({ data, ...rest }) => {\r\n        let newData = data;\r\n        if (copy) {\r\n            newData = new Float32Array(data.length);\r\n            newData.set(data);\r\n        }\r\n        return { ...rest, data: newData, transferrables: [newData.buffer] };\r\n    });\r\n}\r\nfunction prepareContourTile(promise) {\r\n    return map(promise, ({ arrayBuffer }) => {\r\n        const clone = copy(arrayBuffer);\r\n        return {\r\n            arrayBuffer: clone,\r\n            transferrables: [clone],\r\n        };\r\n    });\r\n}\r\nlet supportsOffscreenCanvas = null;\r\nfunction offscreenCanvasSupported() {\r\n    if (supportsOffscreenCanvas == null) {\r\n        supportsOffscreenCanvas =\r\n            typeof OffscreenCanvas !== \"undefined\" &&\r\n                new OffscreenCanvas(1, 1).getContext(\"2d\") &&\r\n                typeof createImageBitmap === \"function\";\r\n    }\r\n    return supportsOffscreenCanvas || false;\r\n}\r\nfunction withTimeout(timeoutMs, { value, cancel }) {\r\n    let reject = () => { };\r\n    const timeout = setTimeout(() => {\r\n        cancel();\r\n        reject(new Error(\"timed out\"));\r\n    }, timeoutMs);\r\n    const cancelPromise = new Promise((_, rej) => {\r\n        reject = rej;\r\n    });\r\n    return {\r\n        value: Promise.race([\r\n            cancelPromise,\r\n            (async () => {\r\n                try {\r\n                    return await value;\r\n                }\r\n                finally {\r\n                    clearTimeout(timeout);\r\n                }\r\n            })(),\r\n        ]),\r\n        cancel: () => {\r\n            clearTimeout(timeout);\r\n            cancel();\r\n        },\r\n    };\r\n}\r\n\r\nlet offscreenCanvas;\r\nlet offscreenContext;\r\nlet canvas;\r\nlet canvasContext;\r\n/**\r\n * Parses a `raster-dem` image into a DemTile using OffscreenCanvas and createImageBitmap\r\n * only supported on newer browsers.\r\n */\r\nfunction decodeImageModern(blob, encoding) {\r\n    let canceled = false;\r\n    const promise = createImageBitmap(blob).then((img) => {\r\n        if (canceled)\r\n            return null;\r\n        if (!offscreenCanvas) {\r\n            offscreenCanvas = new OffscreenCanvas(img.width, img.height);\r\n            offscreenContext = offscreenCanvas.getContext(\"2d\", {\r\n                willReadFrequently: true,\r\n            });\r\n        }\r\n        return getElevations(img, encoding, offscreenCanvas, offscreenContext);\r\n    });\r\n    return {\r\n        value: promise,\r\n        cancel: () => {\r\n            canceled = true;\r\n        },\r\n    };\r\n}\r\n/**\r\n * Parses a `raster-dem` image into a DemTile using `<img>` element drawn to a `<canvas>`.\r\n * Only works on the main thread, but works across all browsers.\r\n */\r\nfunction decodeImageOld(blob, encoding) {\r\n    if (!canvas) {\r\n        canvas = document.createElement(\"canvas\");\r\n        canvasContext = canvas.getContext(\"2d\", {\r\n            willReadFrequently: true,\r\n        });\r\n    }\r\n    let canceled = false;\r\n    const img = new Image();\r\n    const value = new Promise((resolve, reject) => {\r\n        img.onload = () => {\r\n            if (!canceled)\r\n                resolve(img);\r\n            URL.revokeObjectURL(img.src);\r\n            img.onload = null;\r\n        };\r\n        img.onerror = () => reject(new Error(\"Could not load image.\"));\r\n        img.src = blob.size ? URL.createObjectURL(blob) : \"\";\r\n    }).then((img) => getElevations(img, encoding, canvas, canvasContext));\r\n    return {\r\n        value,\r\n        cancel: () => {\r\n            canceled = true;\r\n            img.src = \"\";\r\n        },\r\n    };\r\n}\r\n/**\r\n * Parses a `raster-dem` image in a worker that doesn't support OffscreenCanvas and createImageBitmap\r\n * by running decodeImageOld on the main thread and returning the result.\r\n */\r\nfunction decodeImageOnMainThread(blob, encoding) {\r\n    return self.actor.send(\"decodeImage\", [], undefined, blob, encoding);\r\n}\r\nfunction isWorker() {\r\n    return (\r\n    // @ts-ignore\r\n    typeof WorkerGlobalScope !== \"undefined\" &&\r\n        typeof self !== \"undefined\" &&\r\n        // @ts-ignore\r\n        self instanceof WorkerGlobalScope);\r\n}\r\nconst defaultDecoder = offscreenCanvasSupported()\r\n    ? decodeImageModern\r\n    : isWorker()\r\n        ? decodeImageOnMainThread\r\n        : decodeImageOld;\r\nfunction getElevations(img, encoding, canvas, canvasContext) {\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    if (!canvasContext)\r\n        throw new Error(\"failed to get context\");\r\n    canvasContext.drawImage(img, 0, 0, img.width, img.height);\r\n    const rgba = canvasContext.getImageData(0, 0, img.width, img.height).data;\r\n    return decodeParsedImage(img.width, img.height, encoding, rgba);\r\n}\r\nfunction decodeParsedImage(width, height, encoding, input) {\r\n    const decoder = encoding === \"mapbox\"\r\n        ? (r, g, b) => -10000 + (r * 256 * 256 + g * 256 + b) * 0.1\r\n        : (r, g, b) => r * 256 + g + b / 256 - 32768;\r\n    const data = new Float32Array(width * height);\r\n    for (let i = 0; i < input.length; i += 4) {\r\n        data[i / 4] = decoder(input[i], input[i + 1], input[i + 2]);\r\n    }\r\n    return { width, height, data };\r\n}\r\n\r\nconst MIN_VALID_M = -12000;\r\nconst MAX_VALID_M = 9000;\r\nfunction defaultIsValid(number) {\r\n    return !isNaN(number) && number >= MIN_VALID_M && number <= MAX_VALID_M;\r\n}\r\n/** A tile containing elevation values aligned to a grid. */\r\nclass HeightTile {\r\n    constructor(width, height, get) {\r\n        /**\r\n         * Splits this tile into a `1<<subz` x `1<<subz` grid and returns the tile at coordinates `subx, suby`.\r\n         */\r\n        this.split = (subz, subx, suby) => {\r\n            if (subz === 0)\r\n                return this;\r\n            const by = 1 << subz;\r\n            const dx = (subx * this.width) / by;\r\n            const dy = (suby * this.height) / by;\r\n            return new HeightTile(this.width / by, this.height / by, (x, y) => this.get(x + dx, y + dy));\r\n        };\r\n        /**\r\n         * Returns a new tile scaled up by `factor` with pixel values that are subsampled using\r\n         * bilinear interpolation between the original height tile values.\r\n         *\r\n         * The original and result tile are assumed to represent values taken at the center of each pixel.\r\n         */\r\n        this.subsamplePixelCenters = (factor) => {\r\n            const lerp = (a, b, f) => isNaN(a) ? b : isNaN(b) ? a : a + (b - a) * f;\r\n            if (factor <= 1)\r\n                return this;\r\n            const sub = 0.5 - 1 / (2 * factor);\r\n            const blerper = (x, y) => {\r\n                const dx = x / factor - sub;\r\n                const dy = y / factor - sub;\r\n                const ox = Math.floor(dx);\r\n                const oy = Math.floor(dy);\r\n                const a = this.get(ox, oy);\r\n                const b = this.get(ox + 1, oy);\r\n                const c = this.get(ox, oy + 1);\r\n                const d = this.get(ox + 1, oy + 1);\r\n                const fx = dx - ox;\r\n                const fy = dy - oy;\r\n                const top = lerp(a, b, fx);\r\n                const bottom = lerp(c, d, fx);\r\n                return lerp(top, bottom, fy);\r\n            };\r\n            return new HeightTile(this.width * factor, this.height * factor, blerper);\r\n        };\r\n        /**\r\n         * Assumes the input tile represented measurements taken at the center of each pixel, and\r\n         * returns a new tile where values are the height at the top-left of each pixel by averaging\r\n         * the 4 adjacent pixel values.\r\n         */\r\n        this.averagePixelCentersToGrid = (radius = 1) => new HeightTile(this.width + 1, this.height + 1, (x, y) => {\r\n            let sum = 0, count = 0, v = 0;\r\n            for (let newX = x - radius; newX < x + radius; newX++) {\r\n                for (let newY = y - radius; newY < y + radius; newY++) {\r\n                    if (!isNaN((v = this.get(newX, newY)))) {\r\n                        count++;\r\n                        sum += v;\r\n                    }\r\n                }\r\n            }\r\n            return count === 0 ? NaN : sum / count;\r\n        });\r\n        /** Returns a new tile with elevation values scaled by `multiplier`. */\r\n        this.scaleElevation = (multiplier) => multiplier === 1\r\n            ? this\r\n            : new HeightTile(this.width, this.height, (x, y) => this.get(x, y) * multiplier);\r\n        /**\r\n         * Precompute every value from `-bufer, -buffer` to `width + buffer, height + buffer` and serve them\r\n         * out of a `Float32Array`. Until this method is called, all `get` requests are lazy and call all previous\r\n         * methods in the chain up to the root DEM tile.\r\n         */\r\n        this.materialize = (buffer = 2) => {\r\n            const stride = this.width + 2 * buffer;\r\n            const data = new Float32Array(stride * (this.height + 2 * buffer));\r\n            let idx = 0;\r\n            for (let y = -buffer; y < this.height + buffer; y++) {\r\n                for (let x = -buffer; x < this.width + buffer; x++) {\r\n                    data[idx++] = this.get(x, y);\r\n                }\r\n            }\r\n            return new HeightTile(this.width, this.height, (x, y) => data[(y + buffer) * stride + x + buffer]);\r\n        };\r\n        this.get = get;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n    /** Construct a height tile from raw DEM pixel values */\r\n    static fromRawDem(demTile) {\r\n        return new HeightTile(demTile.width, demTile.height, (x, y) => {\r\n            const value = demTile.data[y * demTile.width + x];\r\n            return defaultIsValid(value) ? value : NaN;\r\n        });\r\n    }\r\n    /**\r\n     * Construct a height tile from a DEM tile plus it's 8 neighbors, so that\r\n     * you can request `x` or `y` outside the bounds of the original tile.\r\n     *\r\n     * @param neighbors An array containing tiles: `[nw, n, ne, w, c, e, sw, s, se]`\r\n     */\r\n    static combineNeighbors(neighbors) {\r\n        if (neighbors.length !== 9) {\r\n            throw new Error(\"Must include a tile plus 8 neighbors\");\r\n        }\r\n        const mainTile = neighbors[4];\r\n        if (!mainTile) {\r\n            return undefined;\r\n        }\r\n        const width = mainTile.width;\r\n        const height = mainTile.height;\r\n        return new HeightTile(width, height, (x, y) => {\r\n            let gridIdx = 0;\r\n            if (y < 0) {\r\n                y += height;\r\n            }\r\n            else if (y < height) {\r\n                gridIdx += 3;\r\n            }\r\n            else {\r\n                y -= height;\r\n                gridIdx += 6;\r\n            }\r\n            if (x < 0) {\r\n                x += width;\r\n            }\r\n            else if (x < width) {\r\n                gridIdx += 1;\r\n            }\r\n            else {\r\n                x -= width;\r\n                gridIdx += 2;\r\n            }\r\n            const grid = neighbors[gridIdx];\r\n            return grid ? grid.get(x, y) : NaN;\r\n        });\r\n    }\r\n}\r\n\r\nfunction getDefaultExportFromCjs (x) {\r\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\r\n}\r\n\r\nvar ieee754$1 = {};\r\n\r\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\n\r\nieee754$1.read = function (buffer, offset, isLE, mLen, nBytes) {\r\n  var e, m;\r\n  var eLen = (nBytes * 8) - mLen - 1;\r\n  var eMax = (1 << eLen) - 1;\r\n  var eBias = eMax >> 1;\r\n  var nBits = -7;\r\n  var i = isLE ? (nBytes - 1) : 0;\r\n  var d = isLE ? -1 : 1;\r\n  var s = buffer[offset + i];\r\n\r\n  i += d;\r\n\r\n  e = s & ((1 << (-nBits)) - 1);\r\n  s >>= (-nBits);\r\n  nBits += eLen;\r\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  m = e & ((1 << (-nBits)) - 1);\r\n  e >>= (-nBits);\r\n  nBits += mLen;\r\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n  if (e === 0) {\r\n    e = 1 - eBias;\r\n  } else if (e === eMax) {\r\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\r\n  } else {\r\n    m = m + Math.pow(2, mLen);\r\n    e = e - eBias;\r\n  }\r\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n};\r\n\r\nieee754$1.write = function (buffer, value, offset, isLE, mLen, nBytes) {\r\n  var e, m, c;\r\n  var eLen = (nBytes * 8) - mLen - 1;\r\n  var eMax = (1 << eLen) - 1;\r\n  var eBias = eMax >> 1;\r\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\r\n  var i = isLE ? 0 : (nBytes - 1);\r\n  var d = isLE ? 1 : -1;\r\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\r\n\r\n  value = Math.abs(value);\r\n\r\n  if (isNaN(value) || value === Infinity) {\r\n    m = isNaN(value) ? 1 : 0;\r\n    e = eMax;\r\n  } else {\r\n    e = Math.floor(Math.log(value) / Math.LN2);\r\n    if (value * (c = Math.pow(2, -e)) < 1) {\r\n      e--;\r\n      c *= 2;\r\n    }\r\n    if (e + eBias >= 1) {\r\n      value += rt / c;\r\n    } else {\r\n      value += rt * Math.pow(2, 1 - eBias);\r\n    }\r\n    if (value * c >= 2) {\r\n      e++;\r\n      c /= 2;\r\n    }\r\n\r\n    if (e + eBias >= eMax) {\r\n      m = 0;\r\n      e = eMax;\r\n    } else if (e + eBias >= 1) {\r\n      m = ((value * c) - 1) * Math.pow(2, mLen);\r\n      e = e + eBias;\r\n    } else {\r\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\r\n      e = 0;\r\n    }\r\n  }\r\n\r\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\r\n\r\n  e = (e << mLen) | m;\r\n  eLen += mLen;\r\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\r\n\r\n  buffer[offset + i - d] |= s * 128;\r\n};\r\n\r\nvar pbf = Pbf;\r\n\r\nvar ieee754 = ieee754$1;\r\n\r\nfunction Pbf(buf) {\r\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\r\n    this.pos = 0;\r\n    this.type = 0;\r\n    this.length = this.buf.length;\r\n}\r\n\r\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\r\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\r\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\r\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\r\n\r\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\r\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\r\n\r\n// Threshold chosen based on both benchmarking and knowledge about browser string\r\n// data structures (which currently switch structure types at 12 bytes or more)\r\nvar TEXT_DECODER_MIN_LENGTH = 12;\r\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\r\n\r\nPbf.prototype = {\r\n\r\n    destroy: function() {\r\n        this.buf = null;\r\n    },\r\n\r\n    // === READING =================================================================\r\n\r\n    readFields: function(readField, result, end) {\r\n        end = end || this.length;\r\n\r\n        while (this.pos < end) {\r\n            var val = this.readVarint(),\r\n                tag = val >> 3,\r\n                startPos = this.pos;\r\n\r\n            this.type = val & 0x7;\r\n            readField(tag, result, this);\r\n\r\n            if (this.pos === startPos) this.skip(val);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    readMessage: function(readField, result) {\r\n        return this.readFields(readField, result, this.readVarint() + this.pos);\r\n    },\r\n\r\n    readFixed32: function() {\r\n        var val = readUInt32(this.buf, this.pos);\r\n        this.pos += 4;\r\n        return val;\r\n    },\r\n\r\n    readSFixed32: function() {\r\n        var val = readInt32(this.buf, this.pos);\r\n        this.pos += 4;\r\n        return val;\r\n    },\r\n\r\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\r\n\r\n    readFixed64: function() {\r\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\r\n        this.pos += 8;\r\n        return val;\r\n    },\r\n\r\n    readSFixed64: function() {\r\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\r\n        this.pos += 8;\r\n        return val;\r\n    },\r\n\r\n    readFloat: function() {\r\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\r\n        this.pos += 4;\r\n        return val;\r\n    },\r\n\r\n    readDouble: function() {\r\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\r\n        this.pos += 8;\r\n        return val;\r\n    },\r\n\r\n    readVarint: function(isSigned) {\r\n        var buf = this.buf,\r\n            val, b;\r\n\r\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\r\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\r\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\r\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\r\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\r\n\r\n        return readVarintRemainder(val, isSigned, this);\r\n    },\r\n\r\n    readVarint64: function() { // for compatibility with v2.0.1\r\n        return this.readVarint(true);\r\n    },\r\n\r\n    readSVarint: function() {\r\n        var num = this.readVarint();\r\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\r\n    },\r\n\r\n    readBoolean: function() {\r\n        return Boolean(this.readVarint());\r\n    },\r\n\r\n    readString: function() {\r\n        var end = this.readVarint() + this.pos;\r\n        var pos = this.pos;\r\n        this.pos = end;\r\n\r\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\r\n            // longer strings are fast with the built-in browser TextDecoder API\r\n            return readUtf8TextDecoder(this.buf, pos, end);\r\n        }\r\n        // short strings are fast with our custom implementation\r\n        return readUtf8(this.buf, pos, end);\r\n    },\r\n\r\n    readBytes: function() {\r\n        var end = this.readVarint() + this.pos,\r\n            buffer = this.buf.subarray(this.pos, end);\r\n        this.pos = end;\r\n        return buffer;\r\n    },\r\n\r\n    // verbose for performance reasons; doesn't affect gzipped size\r\n\r\n    readPackedVarint: function(arr, isSigned) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\r\n        return arr;\r\n    },\r\n    readPackedSVarint: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readSVarint());\r\n        return arr;\r\n    },\r\n    readPackedBoolean: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readBoolean());\r\n        return arr;\r\n    },\r\n    readPackedFloat: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readFloat());\r\n        return arr;\r\n    },\r\n    readPackedDouble: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readDouble());\r\n        return arr;\r\n    },\r\n    readPackedFixed32: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readFixed32());\r\n        return arr;\r\n    },\r\n    readPackedSFixed32: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readSFixed32());\r\n        return arr;\r\n    },\r\n    readPackedFixed64: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readFixed64());\r\n        return arr;\r\n    },\r\n    readPackedSFixed64: function(arr) {\r\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\r\n        var end = readPackedEnd(this);\r\n        arr = arr || [];\r\n        while (this.pos < end) arr.push(this.readSFixed64());\r\n        return arr;\r\n    },\r\n\r\n    skip: function(val) {\r\n        var type = val & 0x7;\r\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\r\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\r\n        else if (type === Pbf.Fixed32) this.pos += 4;\r\n        else if (type === Pbf.Fixed64) this.pos += 8;\r\n        else throw new Error('Unimplemented type: ' + type);\r\n    },\r\n\r\n    // === WRITING =================================================================\r\n\r\n    writeTag: function(tag, type) {\r\n        this.writeVarint((tag << 3) | type);\r\n    },\r\n\r\n    realloc: function(min) {\r\n        var length = this.length || 16;\r\n\r\n        while (length < this.pos + min) length *= 2;\r\n\r\n        if (length !== this.length) {\r\n            var buf = new Uint8Array(length);\r\n            buf.set(this.buf);\r\n            this.buf = buf;\r\n            this.length = length;\r\n        }\r\n    },\r\n\r\n    finish: function() {\r\n        this.length = this.pos;\r\n        this.pos = 0;\r\n        return this.buf.subarray(0, this.length);\r\n    },\r\n\r\n    writeFixed32: function(val) {\r\n        this.realloc(4);\r\n        writeInt32(this.buf, val, this.pos);\r\n        this.pos += 4;\r\n    },\r\n\r\n    writeSFixed32: function(val) {\r\n        this.realloc(4);\r\n        writeInt32(this.buf, val, this.pos);\r\n        this.pos += 4;\r\n    },\r\n\r\n    writeFixed64: function(val) {\r\n        this.realloc(8);\r\n        writeInt32(this.buf, val & -1, this.pos);\r\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\r\n        this.pos += 8;\r\n    },\r\n\r\n    writeSFixed64: function(val) {\r\n        this.realloc(8);\r\n        writeInt32(this.buf, val & -1, this.pos);\r\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\r\n        this.pos += 8;\r\n    },\r\n\r\n    writeVarint: function(val) {\r\n        val = +val || 0;\r\n\r\n        if (val > 0xfffffff || val < 0) {\r\n            writeBigVarint(val, this);\r\n            return;\r\n        }\r\n\r\n        this.realloc(4);\r\n\r\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\r\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\r\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\r\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\r\n    },\r\n\r\n    writeSVarint: function(val) {\r\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\r\n    },\r\n\r\n    writeBoolean: function(val) {\r\n        this.writeVarint(Boolean(val));\r\n    },\r\n\r\n    writeString: function(str) {\r\n        str = String(str);\r\n        this.realloc(str.length * 4);\r\n\r\n        this.pos++; // reserve 1 byte for short string length\r\n\r\n        var startPos = this.pos;\r\n        // write the string directly to the buffer and see how much was written\r\n        this.pos = writeUtf8(this.buf, str, this.pos);\r\n        var len = this.pos - startPos;\r\n\r\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\r\n\r\n        // finally, write the message length in the reserved place and restore the position\r\n        this.pos = startPos - 1;\r\n        this.writeVarint(len);\r\n        this.pos += len;\r\n    },\r\n\r\n    writeFloat: function(val) {\r\n        this.realloc(4);\r\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\r\n        this.pos += 4;\r\n    },\r\n\r\n    writeDouble: function(val) {\r\n        this.realloc(8);\r\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\r\n        this.pos += 8;\r\n    },\r\n\r\n    writeBytes: function(buffer) {\r\n        var len = buffer.length;\r\n        this.writeVarint(len);\r\n        this.realloc(len);\r\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\r\n    },\r\n\r\n    writeRawMessage: function(fn, obj) {\r\n        this.pos++; // reserve 1 byte for short message length\r\n\r\n        // write the message directly to the buffer and see how much was written\r\n        var startPos = this.pos;\r\n        fn(obj, this);\r\n        var len = this.pos - startPos;\r\n\r\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\r\n\r\n        // finally, write the message length in the reserved place and restore the position\r\n        this.pos = startPos - 1;\r\n        this.writeVarint(len);\r\n        this.pos += len;\r\n    },\r\n\r\n    writeMessage: function(tag, fn, obj) {\r\n        this.writeTag(tag, Pbf.Bytes);\r\n        this.writeRawMessage(fn, obj);\r\n    },\r\n\r\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\r\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\r\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\r\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\r\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\r\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\r\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\r\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\r\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\r\n\r\n    writeBytesField: function(tag, buffer) {\r\n        this.writeTag(tag, Pbf.Bytes);\r\n        this.writeBytes(buffer);\r\n    },\r\n    writeFixed32Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed32);\r\n        this.writeFixed32(val);\r\n    },\r\n    writeSFixed32Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed32);\r\n        this.writeSFixed32(val);\r\n    },\r\n    writeFixed64Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed64);\r\n        this.writeFixed64(val);\r\n    },\r\n    writeSFixed64Field: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed64);\r\n        this.writeSFixed64(val);\r\n    },\r\n    writeVarintField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Varint);\r\n        this.writeVarint(val);\r\n    },\r\n    writeSVarintField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Varint);\r\n        this.writeSVarint(val);\r\n    },\r\n    writeStringField: function(tag, str) {\r\n        this.writeTag(tag, Pbf.Bytes);\r\n        this.writeString(str);\r\n    },\r\n    writeFloatField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed32);\r\n        this.writeFloat(val);\r\n    },\r\n    writeDoubleField: function(tag, val) {\r\n        this.writeTag(tag, Pbf.Fixed64);\r\n        this.writeDouble(val);\r\n    },\r\n    writeBooleanField: function(tag, val) {\r\n        this.writeVarintField(tag, Boolean(val));\r\n    }\r\n};\r\n\r\nfunction readVarintRemainder(l, s, p) {\r\n    var buf = p.buf,\r\n        h, b;\r\n\r\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\r\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\r\n\r\n    throw new Error('Expected varint not more than 10 bytes');\r\n}\r\n\r\nfunction readPackedEnd(pbf) {\r\n    return pbf.type === Pbf.Bytes ?\r\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\r\n}\r\n\r\nfunction toNum(low, high, isSigned) {\r\n    if (isSigned) {\r\n        return high * 0x100000000 + (low >>> 0);\r\n    }\r\n\r\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\r\n}\r\n\r\nfunction writeBigVarint(val, pbf) {\r\n    var low, high;\r\n\r\n    if (val >= 0) {\r\n        low  = (val % 0x100000000) | 0;\r\n        high = (val / 0x100000000) | 0;\r\n    } else {\r\n        low  = ~(-val % 0x100000000);\r\n        high = ~(-val / 0x100000000);\r\n\r\n        if (low ^ 0xffffffff) {\r\n            low = (low + 1) | 0;\r\n        } else {\r\n            low = 0;\r\n            high = (high + 1) | 0;\r\n        }\r\n    }\r\n\r\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\r\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\r\n    }\r\n\r\n    pbf.realloc(10);\r\n\r\n    writeBigVarintLow(low, high, pbf);\r\n    writeBigVarintHigh(high, pbf);\r\n}\r\n\r\nfunction writeBigVarintLow(low, high, pbf) {\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\r\n    pbf.buf[pbf.pos]   = low & 0x7f;\r\n}\r\n\r\nfunction writeBigVarintHigh(high, pbf) {\r\n    var lsb = (high & 0x07) << 4;\r\n\r\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\r\n    pbf.buf[pbf.pos++]  = high & 0x7f;\r\n}\r\n\r\nfunction makeRoomForExtraLength(startPos, len, pbf) {\r\n    var extraLen =\r\n        len <= 0x3fff ? 1 :\r\n        len <= 0x1fffff ? 2 :\r\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\r\n\r\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\r\n    pbf.realloc(extraLen);\r\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\r\n}\r\n\r\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\r\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\r\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\r\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\r\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\r\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\r\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\r\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\r\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\r\n\r\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\r\n\r\nfunction readUInt32(buf, pos) {\r\n    return ((buf[pos]) |\r\n        (buf[pos + 1] << 8) |\r\n        (buf[pos + 2] << 16)) +\r\n        (buf[pos + 3] * 0x1000000);\r\n}\r\n\r\nfunction writeInt32(buf, val, pos) {\r\n    buf[pos] = val;\r\n    buf[pos + 1] = (val >>> 8);\r\n    buf[pos + 2] = (val >>> 16);\r\n    buf[pos + 3] = (val >>> 24);\r\n}\r\n\r\nfunction readInt32(buf, pos) {\r\n    return ((buf[pos]) |\r\n        (buf[pos + 1] << 8) |\r\n        (buf[pos + 2] << 16)) +\r\n        (buf[pos + 3] << 24);\r\n}\r\n\r\nfunction readUtf8(buf, pos, end) {\r\n    var str = '';\r\n    var i = pos;\r\n\r\n    while (i < end) {\r\n        var b0 = buf[i];\r\n        var c = null; // codepoint\r\n        var bytesPerSequence =\r\n            b0 > 0xEF ? 4 :\r\n            b0 > 0xDF ? 3 :\r\n            b0 > 0xBF ? 2 : 1;\r\n\r\n        if (i + bytesPerSequence > end) break;\r\n\r\n        var b1, b2, b3;\r\n\r\n        if (bytesPerSequence === 1) {\r\n            if (b0 < 0x80) {\r\n                c = b0;\r\n            }\r\n        } else if (bytesPerSequence === 2) {\r\n            b1 = buf[i + 1];\r\n            if ((b1 & 0xC0) === 0x80) {\r\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\r\n                if (c <= 0x7F) {\r\n                    c = null;\r\n                }\r\n            }\r\n        } else if (bytesPerSequence === 3) {\r\n            b1 = buf[i + 1];\r\n            b2 = buf[i + 2];\r\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\r\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\r\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\r\n                    c = null;\r\n                }\r\n            }\r\n        } else if (bytesPerSequence === 4) {\r\n            b1 = buf[i + 1];\r\n            b2 = buf[i + 2];\r\n            b3 = buf[i + 3];\r\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\r\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\r\n                if (c <= 0xFFFF || c >= 0x110000) {\r\n                    c = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (c === null) {\r\n            c = 0xFFFD;\r\n            bytesPerSequence = 1;\r\n\r\n        } else if (c > 0xFFFF) {\r\n            c -= 0x10000;\r\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\r\n            c = 0xDC00 | c & 0x3FF;\r\n        }\r\n\r\n        str += String.fromCharCode(c);\r\n        i += bytesPerSequence;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nfunction readUtf8TextDecoder(buf, pos, end) {\r\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\r\n}\r\n\r\nfunction writeUtf8(buf, str, pos) {\r\n    for (var i = 0, c, lead; i < str.length; i++) {\r\n        c = str.charCodeAt(i); // code point\r\n\r\n        if (c > 0xD7FF && c < 0xE000) {\r\n            if (lead) {\r\n                if (c < 0xDC00) {\r\n                    buf[pos++] = 0xEF;\r\n                    buf[pos++] = 0xBF;\r\n                    buf[pos++] = 0xBD;\r\n                    lead = c;\r\n                    continue;\r\n                } else {\r\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\r\n                    lead = null;\r\n                }\r\n            } else {\r\n                if (c > 0xDBFF || (i + 1 === str.length)) {\r\n                    buf[pos++] = 0xEF;\r\n                    buf[pos++] = 0xBF;\r\n                    buf[pos++] = 0xBD;\r\n                } else {\r\n                    lead = c;\r\n                }\r\n                continue;\r\n            }\r\n        } else if (lead) {\r\n            buf[pos++] = 0xEF;\r\n            buf[pos++] = 0xBF;\r\n            buf[pos++] = 0xBD;\r\n            lead = null;\r\n        }\r\n\r\n        if (c < 0x80) {\r\n            buf[pos++] = c;\r\n        } else {\r\n            if (c < 0x800) {\r\n                buf[pos++] = c >> 0x6 | 0xC0;\r\n            } else {\r\n                if (c < 0x10000) {\r\n                    buf[pos++] = c >> 0xC | 0xE0;\r\n                } else {\r\n                    buf[pos++] = c >> 0x12 | 0xF0;\r\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\r\n                }\r\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\r\n            }\r\n            buf[pos++] = c & 0x3F | 0x80;\r\n        }\r\n    }\r\n    return pos;\r\n}\r\n\r\nvar Pbf$1 = /*@__PURE__*/getDefaultExportFromCjs(pbf);\r\n\r\n/*\r\nAdapted from vt-pbf https://github.com/mapbox/vt-pbf\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Anand Thakker\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n*/\r\nvar GeomType;\r\n(function (GeomType) {\r\n    GeomType[GeomType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    GeomType[GeomType[\"POINT\"] = 1] = \"POINT\";\r\n    GeomType[GeomType[\"LINESTRING\"] = 2] = \"LINESTRING\";\r\n    GeomType[GeomType[\"POLYGON\"] = 3] = \"POLYGON\";\r\n})(GeomType || (GeomType = {}));\r\n/**\r\n * Enodes and serializes a mapbox vector tile as an array of bytes.\r\n */\r\nfunction encodeVectorTile(tile) {\r\n    const pbf = new Pbf$1();\r\n    for (const id in tile.layers) {\r\n        const layer = tile.layers[id];\r\n        if (!layer.extent) {\r\n            layer.extent = tile.extent;\r\n        }\r\n        pbf.writeMessage(3, writeLayer, { ...layer, id });\r\n    }\r\n    return pbf.finish();\r\n}\r\nfunction writeLayer(layer, pbf) {\r\n    if (!pbf)\r\n        throw new Error(\"pbf undefined\");\r\n    pbf.writeVarintField(15, 2);\r\n    pbf.writeStringField(1, layer.id || \"\");\r\n    pbf.writeVarintField(5, layer.extent || 4096);\r\n    const context = {\r\n        keys: [],\r\n        values: [],\r\n        keycache: {},\r\n        valuecache: {},\r\n    };\r\n    for (const feature of layer.features) {\r\n        context.feature = feature;\r\n        pbf.writeMessage(2, writeFeature, context);\r\n    }\r\n    for (const key of context.keys) {\r\n        pbf.writeStringField(3, key);\r\n    }\r\n    for (const value of context.values) {\r\n        pbf.writeMessage(4, writeValue, value);\r\n    }\r\n}\r\nfunction writeFeature(context, pbf) {\r\n    const feature = context.feature;\r\n    if (!feature || !pbf)\r\n        throw new Error();\r\n    pbf.writeMessage(2, writeProperties, context);\r\n    pbf.writeVarintField(3, feature.type);\r\n    pbf.writeMessage(4, writeGeometry, feature);\r\n}\r\nfunction writeProperties(context, pbf) {\r\n    const feature = context.feature;\r\n    if (!feature || !pbf)\r\n        throw new Error();\r\n    const keys = context.keys;\r\n    const values = context.values;\r\n    const keycache = context.keycache;\r\n    const valuecache = context.valuecache;\r\n    for (const key in feature.properties) {\r\n        let value = feature.properties[key];\r\n        let keyIndex = keycache[key];\r\n        if (value === null)\r\n            continue; // don't encode null value properties\r\n        if (typeof keyIndex === \"undefined\") {\r\n            keys.push(key);\r\n            keyIndex = keys.length - 1;\r\n            keycache[key] = keyIndex;\r\n        }\r\n        pbf.writeVarint(keyIndex);\r\n        const type = typeof value;\r\n        if (type !== \"string\" && type !== \"boolean\" && type !== \"number\") {\r\n            value = JSON.stringify(value);\r\n        }\r\n        const valueKey = `${type}:${value}`;\r\n        let valueIndex = valuecache[valueKey];\r\n        if (typeof valueIndex === \"undefined\") {\r\n            values.push(value);\r\n            valueIndex = values.length - 1;\r\n            valuecache[valueKey] = valueIndex;\r\n        }\r\n        pbf.writeVarint(valueIndex);\r\n    }\r\n}\r\nfunction command(cmd, length) {\r\n    return (length << 3) + (cmd & 0x7);\r\n}\r\nfunction zigzag(num) {\r\n    return (num << 1) ^ (num >> 31);\r\n}\r\nfunction writeGeometry(feature, pbf) {\r\n    if (!pbf)\r\n        throw new Error();\r\n    const geometry = feature.geometry;\r\n    const type = feature.type;\r\n    let x = 0;\r\n    let y = 0;\r\n    for (const ring of geometry) {\r\n        let count = 1;\r\n        if (type === GeomType.POINT) {\r\n            count = ring.length / 2;\r\n        }\r\n        pbf.writeVarint(command(1, count)); // moveto\r\n        // do not write polygon closing path as lineto\r\n        const length = ring.length / 2;\r\n        const lineCount = type === GeomType.POLYGON ? length - 1 : length;\r\n        for (let i = 0; i < lineCount; i++) {\r\n            if (i === 1 && type !== 1) {\r\n                pbf.writeVarint(command(2, lineCount - 1)); // lineto\r\n            }\r\n            const dx = ring[i * 2] - x;\r\n            const dy = ring[i * 2 + 1] - y;\r\n            pbf.writeVarint(zigzag(dx));\r\n            pbf.writeVarint(zigzag(dy));\r\n            x += dx;\r\n            y += dy;\r\n        }\r\n        if (type === GeomType.POLYGON) {\r\n            pbf.writeVarint(command(7, 1)); // closepath\r\n        }\r\n    }\r\n}\r\nfunction writeValue(value, pbf) {\r\n    if (!pbf)\r\n        throw new Error();\r\n    if (typeof value === \"string\") {\r\n        pbf.writeStringField(1, value);\r\n    }\r\n    else if (typeof value === \"boolean\") {\r\n        pbf.writeBooleanField(7, value);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        if (value % 1 !== 0) {\r\n            pbf.writeDoubleField(3, value);\r\n        }\r\n        else if (value < 0) {\r\n            pbf.writeSVarintField(6, value);\r\n        }\r\n        else {\r\n            pbf.writeVarintField(5, value);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Caches, decodes, and processes raster tiles in the current thread.\r\n */\r\nclass LocalDemManager {\r\n    constructor(demUrlPattern, cacheSize, encoding, maxzoom, timeoutMs) {\r\n        this.loaded = Promise.resolve();\r\n        this.decodeImage = defaultDecoder;\r\n        this.fetchAndParseTile = (z, x, y, timer) => {\r\n            const self = this;\r\n            const url = this.demUrlPattern\r\n                .replace(\"{z}\", z.toString())\r\n                .replace(\"{x}\", x.toString())\r\n                .replace(\"{y}\", y.toString());\r\n            timer === null || timer === void 0 ? void 0 : timer.useTile(url);\r\n            return this.parsedCache.getCancelable(url, () => {\r\n                const tile = self.fetchTile(z, x, y, timer);\r\n                let canceled = false;\r\n                let alsoCancel = () => { };\r\n                return {\r\n                    value: tile.value.then(async (response) => {\r\n                        if (canceled)\r\n                            throw new Error(\"canceled\");\r\n                        const result = self.decodeImage(response.data, self.encoding);\r\n                        alsoCancel = result.cancel;\r\n                        const mark = timer === null || timer === void 0 ? void 0 : timer.marker(\"decode\");\r\n                        const value = await result.value;\r\n                        mark === null || mark === void 0 ? void 0 : mark();\r\n                        return value;\r\n                    }),\r\n                    cancel: () => {\r\n                        canceled = true;\r\n                        alsoCancel();\r\n                        tile.cancel();\r\n                    },\r\n                };\r\n            });\r\n        };\r\n        this.tileCache = new AsyncCache(cacheSize);\r\n        this.parsedCache = new AsyncCache(cacheSize);\r\n        this.contourCache = new AsyncCache(cacheSize);\r\n        this.timeoutMs = timeoutMs;\r\n        this.demUrlPattern = demUrlPattern;\r\n        this.encoding = encoding;\r\n        this.maxzoom = maxzoom;\r\n    }\r\n    fetchTile(z, x, y, timer) {\r\n        const url = this.demUrlPattern\r\n            .replace(\"{z}\", z.toString())\r\n            .replace(\"{x}\", x.toString())\r\n            .replace(\"{y}\", y.toString());\r\n        timer === null || timer === void 0 ? void 0 : timer.useTile(url);\r\n        return this.tileCache.getCancelable(url, () => {\r\n            let cancel = () => { };\r\n            const options = {};\r\n            try {\r\n                const controller = new AbortController();\r\n                options.signal = controller.signal;\r\n                cancel = () => controller.abort();\r\n            }\r\n            catch (e) {\r\n                // ignore\r\n            }\r\n            timer === null || timer === void 0 ? void 0 : timer.fetchTile(url);\r\n            const mark = timer === null || timer === void 0 ? void 0 : timer.marker(\"fetch\");\r\n            return withTimeout(this.timeoutMs, {\r\n                value: fetch(url, options).then(async (response) => {\r\n                    mark === null || mark === void 0 ? void 0 : mark();\r\n                    if (!response.ok) {\r\n                        throw new Error(`Bad response: ${response.status} for ${url}`);\r\n                    }\r\n                    return {\r\n                        data: await response.blob(),\r\n                        expires: response.headers.get(\"expires\") || undefined,\r\n                        cacheControl: response.headers.get(\"cache-control\") || undefined,\r\n                    };\r\n                }),\r\n                cancel,\r\n            });\r\n        });\r\n    }\r\n    fetchDem(z, x, y, options, timer) {\r\n        const zoom = Math.min(z - (options.overzoom || 0), this.maxzoom);\r\n        const subZ = z - zoom;\r\n        const div = 1 << subZ;\r\n        const newX = Math.floor(x / div);\r\n        const newY = Math.floor(y / div);\r\n        const { value, cancel } = this.fetchAndParseTile(zoom, newX, newY, timer);\r\n        const subX = x % div;\r\n        const subY = y % div;\r\n        return {\r\n            value: value.then((tile) => HeightTile.fromRawDem(tile).split(subZ, subX, subY)),\r\n            cancel,\r\n        };\r\n    }\r\n    fetchContourTile(z, x, y, options, timer) {\r\n        const { levels, multiplier = 1, buffer = 1, extent = 4096, contourLayer = \"contours\", elevationKey = \"ele\", levelKey = \"level\", subsampleBelow = 100, } = options;\r\n        // no levels means less than min zoom with levels specified\r\n        if (!levels || levels.length === 0) {\r\n            return {\r\n                cancel() { },\r\n                value: Promise.resolve({ arrayBuffer: new ArrayBuffer(0) }),\r\n            };\r\n        }\r\n        const key = [z, x, y, encodeIndividualOptions(options)].join(\"/\");\r\n        return this.contourCache.getCancelable(key, () => {\r\n            const max = 1 << z;\r\n            let canceled = false;\r\n            const neighborPromises = [];\r\n            for (let iy = y - 1; iy <= y + 1; iy++) {\r\n                for (let ix = x - 1; ix <= x + 1; ix++) {\r\n                    neighborPromises.push(iy < 0 || iy >= max\r\n                        ? null\r\n                        : this.fetchDem(z, (ix + max) % max, iy, options, timer));\r\n                }\r\n            }\r\n            const value = Promise.all(neighborPromises.map((n) => n === null || n === void 0 ? void 0 : n.value)).then(async (neighbors) => {\r\n                let virtualTile = HeightTile.combineNeighbors(neighbors);\r\n                if (!virtualTile || canceled) {\r\n                    return { arrayBuffer: new Uint8Array().buffer };\r\n                }\r\n                const mark = timer === null || timer === void 0 ? void 0 : timer.marker(\"isoline\");\r\n                if (virtualTile.width >= subsampleBelow) {\r\n                    virtualTile = virtualTile.materialize(2);\r\n                }\r\n                else {\r\n                    while (virtualTile.width < subsampleBelow) {\r\n                        virtualTile = virtualTile.subsamplePixelCenters(2).materialize(2);\r\n                    }\r\n                }\r\n                virtualTile = virtualTile\r\n                    .averagePixelCentersToGrid()\r\n                    .scaleElevation(multiplier)\r\n                    .materialize(1);\r\n                const isolines = generateIsolines(levels[0], virtualTile, extent, buffer);\r\n                mark === null || mark === void 0 ? void 0 : mark();\r\n                const result = encodeVectorTile({\r\n                    extent,\r\n                    layers: {\r\n                        [contourLayer]: {\r\n                            features: Object.entries(isolines).map(([eleString, geom]) => {\r\n                                const ele = Number(eleString);\r\n                                return {\r\n                                    type: GeomType.LINESTRING,\r\n                                    geometry: geom,\r\n                                    properties: {\r\n                                        [elevationKey]: ele,\r\n                                        [levelKey]: Math.max(...levels.map((l, i) => (ele % l === 0 ? i : 0))),\r\n                                    },\r\n                                };\r\n                            }),\r\n                        },\r\n                    },\r\n                });\r\n                mark === null || mark === void 0 ? void 0 : mark();\r\n                return { arrayBuffer: result.buffer };\r\n            });\r\n            return {\r\n                value,\r\n                cancel() {\r\n                    canceled = true;\r\n                    neighborPromises.forEach((n) => n && n.cancel());\r\n                },\r\n            };\r\n        });\r\n    }\r\n}\r\n\r\nconst perf = typeof performance !== \"undefined\" ? performance : undefined;\r\nconst timeOrigin = perf\r\n    ? perf.timeOrigin || new Date().getTime() - perf.now()\r\n    : new Date().getTime();\r\nfunction getResourceTiming(url) {\r\n    var _a;\r\n    return JSON.parse(JSON.stringify(((_a = perf === null || perf === void 0 ? void 0 : perf.getEntriesByName) === null || _a === void 0 ? void 0 : _a.call(perf, url)) || []));\r\n}\r\nfunction now() {\r\n    return perf ? perf.now() : new Date().getTime();\r\n}\r\nfunction flatten(input) {\r\n    const result = [];\r\n    for (const list of input) {\r\n        result.push(...list);\r\n    }\r\n    return result;\r\n}\r\n/** Utility for tracking how long tiles take to generate, and where the time is going. */\r\nclass Timer {\r\n    constructor(name) {\r\n        this.marks = {};\r\n        this.urls = [];\r\n        this.fetched = [];\r\n        this.resources = [];\r\n        this.tilesFetched = 0;\r\n        this.timeOrigin = timeOrigin;\r\n        this.finish = (url) => {\r\n            this.markFinish();\r\n            const get = (type) => {\r\n                const all = this.marks[type] || [];\r\n                const max = Math.max(...all.map((ns) => Math.max(...ns)));\r\n                const min = Math.min(...all.map((ns) => Math.min(...ns)));\r\n                return Number.isFinite(max) ? max - min : undefined;\r\n            };\r\n            const duration = get(\"main\") || 0;\r\n            const fetch = get(\"fetch\");\r\n            const decode = get(\"decode\");\r\n            const process = get(\"isoline\");\r\n            return {\r\n                url,\r\n                tilesUsed: this.tilesFetched,\r\n                origin: this.timeOrigin,\r\n                marks: this.marks,\r\n                resources: [\r\n                    ...this.resources,\r\n                    ...flatten(this.fetched.map(getResourceTiming)),\r\n                ],\r\n                duration,\r\n                fetch,\r\n                decode,\r\n                process,\r\n                wait: duration - (fetch || 0) - (decode || 0) - (process || 0),\r\n            };\r\n        };\r\n        this.error = (url) => ({ ...this.finish(url), error: true });\r\n        this.marker = (category) => {\r\n            var _a;\r\n            if (!this.marks[category]) {\r\n                this.marks[category] = [];\r\n            }\r\n            const marks = [now()];\r\n            (_a = this.marks[category]) === null || _a === void 0 ? void 0 : _a.push(marks);\r\n            return () => marks.push(now());\r\n        };\r\n        this.useTile = (url) => {\r\n            if (this.urls.indexOf(url) < 0) {\r\n                this.urls.push(url);\r\n                this.tilesFetched++;\r\n            }\r\n        };\r\n        this.fetchTile = (url) => {\r\n            if (this.fetched.indexOf(url) < 0) {\r\n                this.fetched.push(url);\r\n            }\r\n        };\r\n        this.addAll = (timings) => {\r\n            var _a;\r\n            this.tilesFetched += timings.tilesUsed;\r\n            const offset = timings.origin - this.timeOrigin;\r\n            for (const category in timings.marks) {\r\n                const key = category;\r\n                const ourList = this.marks[key] || (this.marks[key] = []);\r\n                ourList.push(...(((_a = timings.marks[key]) === null || _a === void 0 ? void 0 : _a.map((ns) => ns.map((n) => n + offset))) || []));\r\n            }\r\n            this.resources.push(...timings.resources.map((rt) => applyOffset(rt, offset)));\r\n        };\r\n        this.markFinish = this.marker(name);\r\n    }\r\n}\r\nconst startOrEnd = /(Start$|End$|^start|^end)/;\r\nfunction applyOffset(obj, offset) {\r\n    const result = {};\r\n    for (const key in obj) {\r\n        if (obj[key] !== 0 && startOrEnd.test(key)) {\r\n            result[key] = Number(obj[key]) + offset;\r\n        }\r\n        else {\r\n            result[key] = obj[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nlet id = 0;\r\n/**\r\n * Utility for sending messages to a remote instance of `<T>` running in a web worker\r\n * from the main thread, or in the main thread running from a web worker.\r\n */\r\nclass Actor {\r\n    constructor(dest, dispatcher, timeoutMs = 20000) {\r\n        this.callbacks = {};\r\n        this.cancels = {};\r\n        this.dest = dest;\r\n        this.timeoutMs = timeoutMs;\r\n        this.dest.onmessage = async ({ data }) => {\r\n            const message = data;\r\n            if (message.type === \"cancel\") {\r\n                const cancel = this.cancels[message.id];\r\n                delete this.cancels[message.id];\r\n                if (cancel) {\r\n                    cancel();\r\n                }\r\n            }\r\n            else if (message.type === \"response\") {\r\n                const callback = this.callbacks[message.id];\r\n                delete this.callbacks[message.id];\r\n                if (callback) {\r\n                    callback(message.error ? new Error(message.error) : undefined, message.response, message.timings);\r\n                }\r\n            }\r\n            else if (message.type === \"request\") {\r\n                const timer = new Timer(\"worker\");\r\n                const handler = dispatcher[message.name];\r\n                const request = handler.apply(handler, [...message.args, timer]);\r\n                const url = `${message.name}_${message.id}`;\r\n                if (message.id && request) {\r\n                    this.cancels[message.id] = request.cancel;\r\n                    try {\r\n                        const response = await request.value;\r\n                        const transferrables = response === null || response === void 0 ? void 0 : response.transferrables;\r\n                        this.postMessage({\r\n                            id: message.id,\r\n                            type: \"response\",\r\n                            response,\r\n                            timings: timer.finish(url),\r\n                        }, transferrables);\r\n                    }\r\n                    catch (e) {\r\n                        this.postMessage({\r\n                            id: message.id,\r\n                            type: \"response\",\r\n                            error: (e === null || e === void 0 ? void 0 : e.toString()) || \"error\",\r\n                            timings: timer.finish(url),\r\n                        });\r\n                    }\r\n                    delete this.cancels[message.id];\r\n                }\r\n            }\r\n        };\r\n    }\r\n    postMessage(message, transferrables) {\r\n        this.dest.postMessage(message, transferrables || []);\r\n    }\r\n    /** Invokes a method by name with a set of arguments in the remote context. */\r\n    send(name, transferrables, timer, ...args) {\r\n        const thisId = ++id;\r\n        const value = new Promise((resolve, reject) => {\r\n            this.postMessage({ id: thisId, type: \"request\", name, args }, transferrables);\r\n            this.callbacks[thisId] = (error, result, timings) => {\r\n                timer === null || timer === void 0 ? void 0 : timer.addAll(timings);\r\n                if (error)\r\n                    reject(error);\r\n                else\r\n                    resolve(result);\r\n            };\r\n        });\r\n        return withTimeout(this.timeoutMs, {\r\n            value,\r\n            cancel: () => {\r\n                delete this.callbacks[thisId];\r\n                this.postMessage({ id: thisId, type: \"cancel\" });\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexports.Actor = Actor;\r\nexports.HeightTile = HeightTile;\r\nexports.LocalDemManager = LocalDemManager;\r\nexports.Timer = Timer;\r\nexports.decodeOptions = decodeOptions;\r\nexports.decodeParsedImage = decodeParsedImage;\r\nexports.defaultDecoder = defaultDecoder;\r\nexports.encodeOptions = encodeOptions;\r\nexports.generateIsolines = generateIsolines;\r\nexports.getOptionsForZoom = getOptionsForZoom;\r\nexports.prepareContourTile = prepareContourTile;\r\nexports.prepareDemTile = prepareDemTile;\r\n\r\n}));\r\n\r\ndefine(['./shared'], (function (actor) { 'use strict';\r\n\r\nconst noManager = (managerId) => ({\r\n    cancel() { },\r\n    value: Promise.reject(new Error(`No manager registered for ${managerId}`)),\r\n});\r\n/**\r\n * Receives messages from an actor in the web worker.\r\n */\r\nclass WorkerDispatch {\r\n    constructor() {\r\n        /** There is one worker shared between all managers in the main thread using the plugin, so need to store each of their configurations. */\r\n        this.managers = {};\r\n        this.init = (message) => {\r\n            this.managers[message.managerId] = new actor.LocalDemManager(message.demUrlPattern, message.cacheSize, message.encoding, message.maxzoom, message.timeoutMs);\r\n            return { cancel() { }, value: Promise.resolve() };\r\n        };\r\n        this.fetchTile = (managerId, z, x, y, timer) => { var _a; return ((_a = this.managers[managerId]) === null || _a === void 0 ? void 0 : _a.fetchTile(z, x, y, timer)) || noManager(managerId); };\r\n        this.fetchAndParseTile = (managerId, z, x, y, timer) => {\r\n            var _a;\r\n            return actor.prepareDemTile(((_a = this.managers[managerId]) === null || _a === void 0 ? void 0 : _a.fetchAndParseTile(z, x, y, timer)) ||\r\n                noManager(managerId), true);\r\n        };\r\n        this.fetchContourTile = (managerId, z, x, y, options, timer) => {\r\n            var _a;\r\n            return actor.prepareContourTile(((_a = this.managers[managerId]) === null || _a === void 0 ? void 0 : _a.fetchContourTile(z, x, y, options, timer)) ||\r\n                noManager(managerId));\r\n        };\r\n    }\r\n}\r\n\r\nconst g = typeof self !== \"undefined\"\r\n    ? self\r\n    : typeof window !== \"undefined\"\r\n        ? window\r\n        : global;\r\ng.actor = new actor.Actor(g, new WorkerDispatch());\r\n\r\n}));\r\n\r\ndefine(['./shared'], (function (actor) { 'use strict';\r\n\r\nconst CONFIG = { workerUrl: \"\" };\r\n\r\nlet _actor;\r\nlet id = 0;\r\nclass MainThreadDispatch {\r\n    constructor() {\r\n        this.decodeImage = (blob, encoding) => actor.prepareDemTile(actor.defaultDecoder(blob, encoding), false);\r\n    }\r\n}\r\nfunction defaultActor() {\r\n    if (!_actor) {\r\n        const worker = new Worker(CONFIG.workerUrl);\r\n        const dispatch = new MainThreadDispatch();\r\n        _actor = new actor.Actor(worker, dispatch);\r\n    }\r\n    return _actor;\r\n}\r\n/**\r\n * Caches, decodes, and processes raster tiles in a shared web worker.\r\n */\r\nclass RemoteDemManager {\r\n    constructor(demUrlPattern, cacheSize, encoding, maxzoom, timeoutMs, actor) {\r\n        this.fetchTile = (z, x, y, timer) => this.actor.send(\"fetchTile\", [], timer, this.managerId, z, x, y);\r\n        this.fetchAndParseTile = (z, x, y, timer) => this.actor.send(\"fetchAndParseTile\", [], timer, this.managerId, z, x, y);\r\n        this.fetchContourTile = (z, x, y, options, timer) => this.actor.send(\"fetchContourTile\", [], timer, this.managerId, z, x, y, options);\r\n        const managerId = (this.managerId = ++id);\r\n        this.actor = actor || defaultActor();\r\n        this.loaded = this.actor.send(\"init\", [], undefined, {\r\n            cacheSize,\r\n            demUrlPattern,\r\n            encoding,\r\n            maxzoom,\r\n            managerId,\r\n            timeoutMs,\r\n        }).value;\r\n    }\r\n}\r\n\r\nif (!Blob.prototype.arrayBuffer) {\r\n    Blob.prototype.arrayBuffer = function arrayBuffer() {\r\n        return new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = (event) => { var _a; return resolve((_a = event.target) === null || _a === void 0 ? void 0 : _a.result); };\r\n            fileReader.onerror = reject;\r\n            fileReader.readAsArrayBuffer(this);\r\n        });\r\n    };\r\n}\r\nconst used = new Set();\r\n/**\r\n * A remote source of DEM tiles that can be connected to maplibre.\r\n */\r\nclass DemSource {\r\n    constructor({ url, cacheSize = 100, id = \"dem\", encoding = \"terrarium\", maxzoom = 12, worker = true, timeoutMs = 10000, actor: actor$1, }) {\r\n        this.timingCallbacks = [];\r\n        /** Registers a callback to be invoked with a performance report after each tile is requested. */\r\n        this.onTiming = (callback) => {\r\n            this.timingCallbacks.push(callback);\r\n        };\r\n        /**\r\n         * Adds contour and shared DEM protocol handlers to maplibre.\r\n         *\r\n         * @param maplibre maplibre global object\r\n         */\r\n        this.setupMaplibre = (maplibre) => {\r\n            maplibre.addProtocol(this.sharedDemProtocolId, this.sharedDemProtocol);\r\n            maplibre.addProtocol(this.contourProtocolId, this.contourProtocol);\r\n        };\r\n        /**\r\n         * Callback to be used with maplibre addProtocol to re-use cached DEM tiles across sources.\r\n         */\r\n        this.sharedDemProtocol = (request, response) => {\r\n            const [z, x, y] = this.parseUrl(request.url);\r\n            const timer = new actor.Timer(\"main\");\r\n            const result = this.manager.fetchTile(z, x, y, timer);\r\n            let canceled = false;\r\n            (async () => {\r\n                let timing;\r\n                try {\r\n                    const data = await result.value;\r\n                    timing = timer.finish(request.url);\r\n                    if (canceled)\r\n                        return;\r\n                    const arrayBuffer = await data.data.arrayBuffer();\r\n                    if (canceled)\r\n                        return;\r\n                    response(undefined, arrayBuffer, data.cacheControl, data.expires);\r\n                }\r\n                catch (error) {\r\n                    timing = timer.error(request.url);\r\n                    if (canceled)\r\n                        return;\r\n                    response(error);\r\n                }\r\n                this.timingCallbacks.forEach((cb) => cb(timing));\r\n            })();\r\n            return {\r\n                cancel: () => {\r\n                    canceled = false;\r\n                    result.cancel();\r\n                },\r\n            };\r\n        };\r\n        /**\r\n         * Callback to be used with maplibre addProtocol to generate contour vector tiles according\r\n         * to options encoded in the tile URL pattern generated by `contourProtocolUrl`.\r\n         */\r\n        this.contourProtocol = (request, response) => {\r\n            const timer = new actor.Timer(\"main\");\r\n            const [z, x, y] = this.parseUrl(request.url);\r\n            const options = actor.decodeOptions(request.url);\r\n            const result = this.manager.fetchContourTile(z, x, y, actor.getOptionsForZoom(options, z), timer);\r\n            let canceled = false;\r\n            (async () => {\r\n                let timing;\r\n                try {\r\n                    const data = await result.value;\r\n                    timing = timer.finish(request.url);\r\n                    if (canceled)\r\n                        return;\r\n                    response(undefined, data.arrayBuffer);\r\n                }\r\n                catch (error) {\r\n                    if (canceled)\r\n                        return;\r\n                    timing = timer.error(request.url);\r\n                    response(error);\r\n                }\r\n                this.timingCallbacks.forEach((cb) => cb(timing));\r\n            })();\r\n            return {\r\n                cancel: () => {\r\n                    canceled = true;\r\n                    result.cancel();\r\n                },\r\n            };\r\n        };\r\n        /**\r\n         * Returns a URL with the correct maplibre protocol prefix and all `option` encoded in request parameters.\r\n         */\r\n        this.contourProtocolUrl = (options) => `${this.contourProtocolUrlBase}?${actor.encodeOptions(options)}`;\r\n        let protocolPrefix = id;\r\n        let i = 1;\r\n        while (used.has(protocolPrefix)) {\r\n            protocolPrefix = id + i++;\r\n        }\r\n        used.add(protocolPrefix);\r\n        this.sharedDemProtocolId = `${protocolPrefix}-shared`;\r\n        this.contourProtocolId = `${protocolPrefix}-contour`;\r\n        this.sharedDemProtocolUrl = `${this.sharedDemProtocolId}://{z}/{x}/{y}`;\r\n        this.contourProtocolUrlBase = `${this.contourProtocolId}://{z}/{x}/{y}`;\r\n        const ManagerClass = worker ? RemoteDemManager : actor.LocalDemManager;\r\n        this.manager = new ManagerClass(url, cacheSize, encoding, maxzoom, timeoutMs, actor$1);\r\n    }\r\n    getDemTile(z, x, y) {\r\n        return this.manager.fetchAndParseTile(z, x, y).value;\r\n    }\r\n    parseUrl(url) {\r\n        const [, z, x, y] = /\\/\\/(\\d+)\\/(\\d+)\\/(\\d+)/.exec(url) || [];\r\n        return [Number(z), Number(x), Number(y)];\r\n    }\r\n}\r\n\r\nconst exported = {\r\n    generateIsolines: actor.generateIsolines,\r\n    DemSource,\r\n    HeightTile: actor.HeightTile,\r\n    LocalDemManager: actor.LocalDemManager,\r\n    decodeParsedImage: actor.decodeParsedImage,\r\n    set workerUrl(url) {\r\n        CONFIG.workerUrl = url;\r\n    },\r\n    get workerUrl() {\r\n        return CONFIG.workerUrl;\r\n    },\r\n};\r\n\r\nreturn exported;\r\n\r\n}));\r\n\r\n/* eslint-disable no-undef */\r\n\r\nvar mlcontour$1 = mlcontour;\r\n\r\nexport { mlcontour$1 as default };\r\n"],
  "mappings": "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",
  "names": ["start", "end", "key", "value", "copy", "img", "canvas", "canvasContext", "num", "pbf", "GeomType", "id", "self", "fetch", "worker", "actor"]
}
