import { CancelablePromise, ContourTile, DemTile, GlobalContourTileOptions, IndividualContourTileOptions, TransferrableContourTile, TransferrableDemTile } from "./types";
export declare function encodeOptions({ thresholds, ...rest }: GlobalContourTileOptions): string;
export declare function decodeOptions(options: string): GlobalContourTileOptions;
export declare function encodeIndividualOptions(options: IndividualContourTileOptions): string;
export declare function getOptionsForZoom(options: GlobalContourTileOptions, zoom: number): IndividualContourTileOptions;
export declare function map<T, U>({ cancel, value }: CancelablePromise<T>, mapper: (t: T) => U): {
    cancel: () => void;
    value: Promise<U>;
};
export declare function copy(src: ArrayBuffer): ArrayBuffer;
export declare function prepareDemTile(promise: CancelablePromise<DemTile>, copy: boolean): CancelablePromise<TransferrableDemTile>;
export declare function prepareContourTile(promise: CancelablePromise<ContourTile>): CancelablePromise<TransferrableContourTile>;
export declare function offscreenCanvasSupported(): boolean;
export declare function withTimeout<T>(timeoutMs: number, { value, cancel }: CancelablePromise<T>): CancelablePromise<T>;
